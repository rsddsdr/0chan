daemon off;

worker_processes 4;
worker_rlimit_nofile 65535;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format time_combined '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '$request_time $upstream_response_time $pipe '
        'cf:$http_cf_connecting_ip ri:$http_x_real_ip ff:$http_x_forwarded_for';

    access_log /dev/stdout;
    error_log /dev/stderr;

    # local
    allow 192.168.0.0/16;
    allow 172.16.0.0/12;
    allow 10.0.0.0/8;
    allow fc00::/7;
    # cloudflare
    allow 103.21.244.0/22;
    allow 103.22.200.0/22;
    allow 103.31.4.0/22;
    allow 104.16.0.0/12;
    allow 108.162.192.0/18;
    allow 131.0.72.0/22;
    allow 141.101.64.0/18;
    allow 162.158.0.0/15;
    allow 172.64.0.0/13;
    allow 173.245.48.0/20;
    allow 188.114.96.0/20;
    allow 190.93.240.0/20;
    allow 197.234.240.0/22;
    allow 198.41.128.0/17;
    allow 199.27.128.0/21;
    allow 2400:cb00::/32;
    allow 2405:8100::/32;
    allow 2405:b500::/32;
    allow 2606:4700::/32;
    allow 2803:f800::/32;
    allow 2c0f:f248::/32;
    allow 2a06:98c0::/29;
    deny all;


    server {
        listen 80 default;

        gzip on;
        gzip_min_length 1000;
        gzip_types text/plain application/json;

        __TORGATE_HEADER__

        if ($request ~* " https?:\/\/") {
            return 444;
        }
        if ($request ~* "^CONNECT") {
            return 444;
        }

        location / {
            access_log /dev/stdout time_combined;
            root /dist;
            try_files $uri /index.html;
        }

        location /static {
            access_log /dev/stdout time_combined;
            root /dist;
        }

        location /robots.txt {
            root /dist/static;
        }

        location /api/ {
            access_log /dev/stdout time_combined;
            client_max_body_size 20m;

            include       /etc/nginx/fastcgi_params;
            fastcgi_pass  backend:9000;
            fastcgi_param SCRIPT_FILENAME /src/www/index.php;
        }

        location /images {
            access_log /dev/stdout time_combined;

            set $client_ip $remote_addr;
            if ($http_cf_connecting_ip != '') {
                set $client_ip $http_cf_connecting_ip;
            }

            secure_link     $arg_hash,$arg_exp;
            secure_link_md5 "$uri:$arg_exp:$client_ip:secret";

            if ($secure_link = "") {
                return 404;
            }

            if ($secure_link = "0") {
                return 410;
            }

            root /;
        }
    }

    server {
        listen 80;
        server_name  ~^(?<server>s[0-9]+)\.;
        access_log off;

        location / {
            if ($request ~* " https?:\/\/") {
                return 444;
            }
            if ($request ~* "^CONNECT") {
                return 444;
            }

            access_log /dev/stdout time_combined;
            resolver storage ipv6=off valid=5s;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://$server:81;
        }
    }
}
